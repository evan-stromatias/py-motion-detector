[tool.poetry]
name = "py-motion-detector"
version = "0.1.0"
description = "A motion detection and logging app in Python using a stationary camera."
authors = ["Evan Stromatias <evangelos.stromatias@gmail.com>"]
maintainers = ["Evan Stromatias <evangelos.stromatias@gmail.com>"]
license = "MIT NON-AI License"
keywords = ["motion detection", "computer vision"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
opencv-python = "^4.9.0.80"
numpy = "^1.26.4"
structlog = "^24.1.0"

[tool.poetry.group.dev.dependencies]
black = "==24.3.0"
ruff = "==0.3.3"
pytest = "^8.1.1"
flake8 = "^7.0.0"
ipython = "^8.22.2"
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.14"
mkdocstrings-python = "^1.9.0"
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.1"
mkdocs-section-index = "^0.3.8"
pre-commit = "^3.6.2"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
line_length = 120
profile = "black"

[tool.black]
skip-string-normalization = true
line-length = 120

[tool.ruff]
# Same as Black.
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []

[tool.poetry.scripts]
py_motion_detector = "py_motion_detector.api.cli.py_motion_detector_basic:main"
py_motion_detector_data_player = "py_motion_detector.api.cli.py_motion_detector_data_player:main"
